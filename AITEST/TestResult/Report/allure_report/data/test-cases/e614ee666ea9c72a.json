{
  "uid" : "e614ee666ea9c72a",
  "name" : "test_allure[case2-F:\\git\\myclone\\AITEST\\testdata\\test_audio\\237M32_08_41_0160.wav-打开卧室空调s]",
  "fullName" : "testcase.TestAiyunNew.test_demo.TestDemo#test_allure",
  "historyId" : "d16460d2bc369f0cf4ec73a70b78f3fc",
  "time" : {
    "start" : 1609376687969,
    "stop" : 1609376692112,
    "duration" : 4143
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '打开卧室空调' == '打开卧室空调s'\n  - 打开卧室空调s\n  ?       -\n  + 打开卧室空调",
  "statusTrace" : "self = <AITEST.testcase.TestAiyunNew.test_demo.TestDemo object at 0x00000211E86DAB20>\ncasenum = 'case2'\nwavfail = 'F:\\\\git\\\\myclone\\\\AITEST\\\\testdata\\\\test_audio\\\\237M32_08_41_0160.wav'\nasr = '打开卧室空调s'\n\n    @pytest.mark.parametrize('casenum,wavfail,asr', data)\n    def test_allure(self, casenum, wavfail, asr):\n        self.online()\n        result=self.speech(casenum, wavfail)\n        print(result)\n        asr_result=eval(result['asr'])['data']['asr']\n    \n        # self.check(username, pwd)\n        allure.attach(self.log, \"log\")\n        allure.dynamic.story(casenum)\n>       assert asr_result == asr\nE       AssertionError: assert '打开卧室空调' == '打开卧室空调s'\nE         - 打开卧室空调s\nE         ?       -\nE         + 打开卧室空调\n\n..\\testcase\\TestAiyunNew\\test_demo.py:74: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "host",
    "time" : {
      "start" : 1609376682921,
      "stop" : 1609376682921,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '打开卧室空调' == '打开卧室空调s'\n  - 打开卧室空调s\n  ?       -\n  + 打开卧室空调",
    "statusTrace" : "self = <AITEST.testcase.TestAiyunNew.test_demo.TestDemo object at 0x00000211E86DAB20>\ncasenum = 'case2'\nwavfail = 'F:\\\\git\\\\myclone\\\\AITEST\\\\testdata\\\\test_audio\\\\237M32_08_41_0160.wav'\nasr = '打开卧室空调s'\n\n    @pytest.mark.parametrize('casenum,wavfail,asr', data)\n    def test_allure(self, casenum, wavfail, asr):\n        self.online()\n        result=self.speech(casenum, wavfail)\n        print(result)\n        asr_result=eval(result['asr'])['data']['asr']\n    \n        # self.check(username, pwd)\n        allure.attach(self.log, \"log\")\n        allure.dynamic.story(casenum)\n>       assert asr_result == asr\nE       AssertionError: assert '打开卧室空调' == '打开卧室空调s'\nE         - 打开卧室空调s\nE         ?       -\nE         + 打开卧室空调\n\n..\\testcase\\TestAiyunNew\\test_demo.py:74: AssertionError",
    "steps" : [ {
      "name" : "设备上线",
      "time" : {
        "start" : 1609376687969,
        "stop" : 1609376688057,
        "duration" : 88
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "发送音频",
      "time" : {
        "start" : 1609376688057,
        "stop" : 1609376692110,
        "duration" : 4053
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "casenum",
        "value" : "'case2'"
      }, {
        "name" : "wavfail",
        "value" : "'F:\\git\\myclone\\AITEST\\testdata\\test_audio\\237M32_08_41_0160.wav'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "e7ec74bae371d1ba",
      "name" : "log",
      "source" : "e7ec74bae371d1ba.attach",
      "type" : "text/plain",
      "size" : 125
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "case2"
  }, {
    "name" : "feature",
    "value" : "1C"
  }, {
    "name" : "parentSuite",
    "value" : "testcase.TestAiyunNew"
  }, {
    "name" : "suite",
    "value" : "test_demo"
  }, {
    "name" : "subSuite",
    "value" : "TestDemo"
  }, {
    "name" : "host",
    "value" : "lijq36721"
  }, {
    "name" : "thread",
    "value" : "13572-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.TestAiyunNew.test_demo"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "asr",
    "value" : "'打开卧室空调s'"
  }, {
    "name" : "casenum",
    "value" : "'case2'"
  }, {
    "name" : "wavfail",
    "value" : "'F:\\git\\myclone\\AITEST\\testdata\\test_audio\\237M32_08_41_0160.wav'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "e614ee666ea9c72a.json",
  "parameterValues" : [ "'打开卧室空调s'", "'case2'", "'F:\\git\\myclone\\AITEST\\testdata\\test_audio\\237M32_08_41_0160.wav'" ]
}