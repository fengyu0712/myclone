{
  "uid" : "f8ac4ef9bd9b9113",
  "name" : "test_allure[case1-F:\\git\\myclone\\AITEST\\testdata\\test_audio\\201M24_01_41_0001.wav-打开卧室空调]",
  "fullName" : "testcase.TestAiyunNew.test_demo.TestDemo#test_allure",
  "historyId" : "8be5ad031618899dff4e747076841755",
  "time" : {
    "start" : 1609376683095,
    "stop" : 1609376687140,
    "duration" : 4045
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '空调开机' == '打开卧室空调'\n  - 打开卧室空调\n  + 空调开机",
  "statusTrace" : "self = <AITEST.testcase.TestAiyunNew.test_demo.TestDemo object at 0x00000211E17FFE20>\ncasenum = 'case1'\nwavfail = 'F:\\\\git\\\\myclone\\\\AITEST\\\\testdata\\\\test_audio\\\\201M24_01_41_0001.wav'\nasr = '打开卧室空调'\n\n    @pytest.mark.parametrize('casenum,wavfail,asr', data)\n    def test_allure(self, casenum, wavfail, asr):\n        self.online()\n        result=self.speech(casenum, wavfail)\n        print(result)\n        asr_result=eval(result['asr'])['data']['asr']\n    \n        # self.check(username, pwd)\n        allure.attach(self.log, \"log\")\n        allure.dynamic.story(casenum)\n>       assert asr_result == asr\nE       AssertionError: assert '空调开机' == '打开卧室空调'\nE         - 打开卧室空调\nE         + 空调开机\n\n..\\testcase\\TestAiyunNew\\test_demo.py:74: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "host",
    "time" : {
      "start" : 1609376682921,
      "stop" : 1609376682921,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '空调开机' == '打开卧室空调'\n  - 打开卧室空调\n  + 空调开机",
    "statusTrace" : "self = <AITEST.testcase.TestAiyunNew.test_demo.TestDemo object at 0x00000211E17FFE20>\ncasenum = 'case1'\nwavfail = 'F:\\\\git\\\\myclone\\\\AITEST\\\\testdata\\\\test_audio\\\\201M24_01_41_0001.wav'\nasr = '打开卧室空调'\n\n    @pytest.mark.parametrize('casenum,wavfail,asr', data)\n    def test_allure(self, casenum, wavfail, asr):\n        self.online()\n        result=self.speech(casenum, wavfail)\n        print(result)\n        asr_result=eval(result['asr'])['data']['asr']\n    \n        # self.check(username, pwd)\n        allure.attach(self.log, \"log\")\n        allure.dynamic.story(casenum)\n>       assert asr_result == asr\nE       AssertionError: assert '空调开机' == '打开卧室空调'\nE         - 打开卧室空调\nE         + 空调开机\n\n..\\testcase\\TestAiyunNew\\test_demo.py:74: AssertionError",
    "steps" : [ {
      "name" : "设备上线",
      "time" : {
        "start" : 1609376683095,
        "stop" : 1609376683209,
        "duration" : 114
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "发送音频",
      "time" : {
        "start" : 1609376683209,
        "stop" : 1609376687132,
        "duration" : 3923
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "casenum",
        "value" : "'case1'"
      }, {
        "name" : "wavfail",
        "value" : "'F:\\git\\myclone\\AITEST\\testdata\\test_audio\\201M24_01_41_0001.wav'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "c92e43665cb9c34a",
      "name" : "log",
      "source" : "c92e43665cb9c34a.attach",
      "type" : "text/plain",
      "size" : 125
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "case1"
  }, {
    "name" : "feature",
    "value" : "1C"
  }, {
    "name" : "parentSuite",
    "value" : "testcase.TestAiyunNew"
  }, {
    "name" : "suite",
    "value" : "test_demo"
  }, {
    "name" : "subSuite",
    "value" : "TestDemo"
  }, {
    "name" : "host",
    "value" : "lijq36721"
  }, {
    "name" : "thread",
    "value" : "13572-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.TestAiyunNew.test_demo"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "asr",
    "value" : "'打开卧室空调'"
  }, {
    "name" : "casenum",
    "value" : "'case1'"
  }, {
    "name" : "wavfail",
    "value" : "'F:\\git\\myclone\\AITEST\\testdata\\test_audio\\201M24_01_41_0001.wav'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "f8ac4ef9bd9b9113.json",
  "parameterValues" : [ "'打开卧室空调'", "'case1'", "'F:\\git\\myclone\\AITEST\\testdata\\test_audio\\201M24_01_41_0001.wav'" ]
}